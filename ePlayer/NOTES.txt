*****
NOTES
*****
- CoreData debugging:
  Product -> Edit Scheme -> Run APP -> Arguments -> -com.apple.CoreData.SQLDebug 1

****
TODO
****
- Animate the edit toolbar coming in/out.

- Bug:
  1 Play alubm A
  2 Play album B
  3 scrub to 0
  4 continues playing
  5 pause
  6 scrub to 0
  XXX After timer expires, track 2 starts unexpectedly.

- If popup is showing, navigating will cause it to "stick" (click on entry, then click back).
- When clicking play on an entry, it should show some kind of pop-up notification that it was added to the queue.

- Resize now-playing green icon to match constraints (10pt width).
- "Done" on keyboard in rename acts as return.
- Why is Lorde showing up when rebuilding db?
- Resetting database seems to not let list views update (seem to still be accessing old data), until you restart.
- Maybe add "play all" button at top of list?  (such as inside an album)
- Make cell elements a little taller.
- Use clean, simple, flat icons (plus, play), particularly in list view.
- Show queue length (total and remaining).
- Removing a song, and adding it back in iTunes confuses the sync (it stays removed, doesn't get readded).
- Weird white line in the queue player cell (under index numbers).
- Rename Button does not revert from "Done" state when you exit editing mode.

- Check for songs without an album title in updateDB.  These do not show up in
  the albumsquery.
- More explicit backup/restore of the database.
- When deleting from orphan folder, pop up warning that the songs will be
  readded during next sync.
  - Could add a hidden orphan folder where they would go.
  - Option to "clear orphans" for debug purposes (allows you to reimport those songs).
- Not entirely comfortable with saving on entering background.  Ideas:
    - Save in background thread.  Would require synchronization work.
    - Save while idle?
    - I've been bitten by this, losing changes (primarily while running in debug).
      The best thing, I think, is to split up the database into files.  
      The browser should preload 1 level deep?  Or build a cache or something.

- Archive database update logs.

- Copying a folder shouldn't make a copy to a *reference* but instead it should actually make a new folder.  Use case: select a folder, copy, paste, the new folder should *not* be tied to the original (try renaming it).  Not only is the reference the same, but then it starts acting really buggy (rename, only 1 shows the rename, but in reality they are both renamed.  Delete, they both get deleted.).  I think it should do this recursively (it should create new entries, think like a file system works).

- "Select all" in edit.
- Scroll titles that are too long to display (or something), otherwise it is impossible to see.
- playlist/artists/albums icons.
- After making modification (like "collapse"), the quick scroll time things on the right come back (they should be hidden).
- undo would be nice to have.
- edit buttons are horribly ugly.
- Having to scroll up to access edit buttons sucks when editing things far down on the list.
  Make the edit controls outside of the UITable, above (pushes UITable down).
- Anno 2070 album is "invalid" when importing.
- Tap "Info" in Queue view when queue is empty crashes.  Probably should just hide the info button when empty.

High
====
- Remove a track in itunes, try playing that track will crash.
- Change append popup to be above/below.
- show album art next to entry of a playlist that is all from one album?
    - Individual songs should always show art if available.
    - album view - show like ipod app (album art, summary at top, etc.)
        - playlist should try to detect this and do the same.
- cut/copy/paste does not propagate play/add/release dates.  Consider adding that
  logic to the entries methods in EPFolder (may have performance issues during import, maybe a global disable).
- What happens when tableview is open when it is removed (via db update).

Medium
======
- Is the scrubber disabled with an empty queue (or nil currentPlayer).
    - disable scrubber
- Paste button should have a # indicating the number of items.
- Delete should show how many items (recursively).
- restore state of selected tab/etc
- handle MPMediaLibraryDidChangeNotification?
    - Resync at start?  Or manual?
- When paused, change scrubber thumb to red.
- Queue tab icon - change speaker icon to not have arcs when not playing.
    Also, change to a continuous triangle?  Not really happy with the squares.
- re-instate max 1-sec scrubber update rate.
- Creating orphan folder from player does not update playlists table view.
    Would be best to have a dirty flag on a folder, and have viewwillappear check it.
- del/cut/copy/paste do not update playCount/playDate/addDate/releaseDate
- libraryChanged notification doesn't seem to show up.  Would be nice to pop
  up an alert or something.
- SVProgressHUD is weird and buggy.

Low
===
- Supporting duplicates in a folder is prone to bugs:
  - Bug in copy/paste.  If a song appears in a folder multiple times, it will only
  be pasted once because it is using the song persistentID.
  - Same with collapse.
  - Probably others.
- Fix alpha sorting so that !Uno! sorts correctly
- Editing buttons should have some images.  "rename" needs "selected" image.
- scrubber is a little sloppy.
  - Letting go, it jumps around sometimes.
- resize entrycell title width to attach to accessory view (disclosure obscures if section indexes).
- Deal with suffle and repeat.
- Docs say that AVAudioPlayer automatically enables/disables audio session, but
  recommend that you manually enable/disable as well?
- Hitting paste while a cell is selected deselects the cell, but doesn't disable
  the delete/cut/copy buttons.
- Ability to edit the queue?

Ideas
=====
- Sort on play counts?
- Should del/cut/copy/paste buttons somehow be static (don't scroll with table)?
- scrubber should pop up audio visualization.
- Not entirely happy that an entry can't be in a folder more than once.  However,
  I don't have an immediate need for that.  Can workaround with subfolders.
